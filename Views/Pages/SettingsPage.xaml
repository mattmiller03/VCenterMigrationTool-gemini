<Page
    x:Class="VCenterMigrationTool.Views.Pages.SettingsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    
    xmlns:helpers="clr-namespace:VCenterMigrationTool.Helpers"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    xmlns:viewmodels="clr-namespace:VCenterMigrationTool.ViewModels"
    Title="SettingsPage"
    d:DataContext="{d:DesignInstance viewmodels:SettingsViewModel, IsDesignTimeCreatable=False}"
    ui:Design.Background="{DynamicResource ApplicationBackgroundBrush}"
    ui:Design.Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    mc:Ignorable="d">

    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
        <StackPanel Margin="42">
            <TextBlock
                FontSize="20"
                FontWeight="Medium"
                Text="Personalization" />
            <TextBlock Margin="0,12,0,0" Text="Theme" />
            <RadioButton
                Command="{Binding ViewModel.ChangeThemeCommand}"
                CommandParameter="theme_light"
                Content="Light"
                IsChecked="{Binding ViewModel.CurrentTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Light}"
                Margin="0,8,0,0" />
            <RadioButton
                Command="{Binding ViewModel.ChangeThemeCommand}"
                CommandParameter="theme_dark"
                Content="Dark"
                IsChecked="{Binding ViewModel.CurrentTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Dark}"
                Margin="0,8,0,0" />

            <TextBlock Margin="0,30,0,0" FontSize="20" FontWeight="Medium" Text="Connection Profiles" />
            <TextBlock Margin="0,12,0,12" Foreground="{DynamicResource TextFillColorSecondaryBrush}" Text="Manage saved vCenter server connection profiles." />

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="20" />
                    <ColumnDefinition Width="300" />
                </Grid.ColumnDefinitions>

                <ListView
                    Grid.Column="0"
                    ItemsSource="{Binding ViewModel.Profiles}"
                    SelectedItem="{Binding ViewModel.SelectedProfileForEditing, Mode=TwoWay}">

                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="Tag" Value="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type Page}}}" />
                            <Setter Property="ContextMenu">
                                <Setter.Value>
                                    <ContextMenu>
                                        <MenuItem 
                                            Header="Edit"
                                            Command="{Binding PlacementTarget.Tag.ViewModel.StartEditCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                            CommandParameter="{Binding}"/>
                                        <MenuItem 
                                            Header="Delete" 
                                            Command="{Binding PlacementTarget.Tag.ViewModel.RemoveProfileCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                            CommandParameter="{Binding}"/>
                                    </ContextMenu>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.ItemContainerStyle>

                    <ListView.View>
                        <GridView>
                            <GridViewColumn DisplayMemberBinding="{Binding Name}" Header="Name" Width="150" />
                            <GridViewColumn DisplayMemberBinding="{Binding ServerAddress}" Header="Server Address" />
                        </GridView>
                    </ListView.View>
                </ListView>

                <StackPanel Grid.Column="2">
                    <TextBlock FontWeight="Medium" Text="{Binding ViewModel.IsEditing, Converter={StaticResource BoolToStringConverter}}" />

                    <ui:TextBox Margin="0,10,0,0" PlaceholderText="Profile Name" Text="{Binding ViewModel.NewProfileName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <ui:TextBox Margin="0,10,0,0" PlaceholderText="Server Address" Text="{Binding ViewModel.NewProfileServer, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <ui:TextBox Margin="0,10,0,0" PlaceholderText="Username" Text="{Binding ViewModel.NewProfileUsername, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                    <StackPanel Visibility="{Binding ViewModel.IsEditing, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=Inverse}">
                        <TextBlock Margin="0,10,0,5" Text="Password" />
                        <ui:PasswordBox x:Name="NewProfilePasswordBox" />
                        <CheckBox Margin="0,10,0,0" Content="Save Password (encrypted)" IsChecked="{Binding ViewModel.ShouldSavePassword, Mode=TwoWay}" />
                    </StackPanel>

                    <ui:Button
                        Margin="0,10,0,0"
                        Command="{Binding ViewModel.AddProfileCommand}"
                        CommandParameter="{Binding ElementName=NewProfilePasswordBox}"
                        Content="Add Profile"
                        Appearance="Primary"
                        Visibility="{Binding ViewModel.IsEditing, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=Inverse}" />

                    <Grid Margin="0,10,0,0" Visibility="{Binding ViewModel.IsEditing, Converter={StaticResource BoolToVisibilityConverter}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="10" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <ui:Button Grid.Column="0" Command="{Binding ViewModel.UpdateProfileCommand}" Content="Update" Appearance="Primary" />
                        <ui:Button Grid.Column="2" Command="{Binding ViewModel.CancelEditCommand}" Content="Cancel" />
                    </Grid>

                    <Separator Margin="0,20,0,20" />

                    <TextBlock Text="Manage Selected Profile" FontWeight="Medium"/>
                    <ui:Button
                        Margin="0,10,0,0"
                        Command="{Binding ViewModel.TestConnectionCommand}"
                        CommandParameter="{Binding ViewModel.SelectedProfileForEditing}"
                        Content="Test Connection"
                        Icon="PlugConnected24" />
                    <TextBlock Margin="0,5,0,0" Foreground="{DynamicResource TextFillColorSecondaryBrush}" Text="{Binding ViewModel.ConnectionStatus}" />
                </StackPanel>
            </Grid>
        </StackPanel>
    </ScrollViewer>
</Page>